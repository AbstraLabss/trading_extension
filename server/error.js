let e = {
  message: 'Request failed with status code 400',
  name: 'AxiosError',
  stack:
    'AxiosError: Request failed with status code 400\n    at settle (C:\\Users\\HP\\Documents\\GitHub\\External\\x_crypto\\node_modules\\axios\\dist\\node\\axios.cjs:1913:12)\n    at Unzip.handleStreamEnd (C:\\Users\\HP\\Documents\\GitHub\\External\\x_crypto\\node_modules\\axios\\dist\\node\\axios.cjs:3008:11)\n    at Unzip.emit (node:events:525:35)\n    at endReadableNT (node:internal/streams/readable:1359:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false,
    },
    adapter: ['xhr', 'http'],
    transformRequest: [null],
    transformResponse: [null],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {},
    headers: {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': 'application/json',
      Authorization: 'KENXOgeSDb5dYmS1qlFi67JTW6MMPOqE5jfa6nv5',
      'User-Agent': 'axios/1.6.0',
      'Content-Length': '390',
      'Accept-Encoding': 'gzip, compress, deflate, br',
    },
    method: 'post',
    url: 'https://graph.defined.fi/graphql',
    data: '{"query":"{\\n              searchTokens(search:ARB, limit:1){\\n                tokens {\\n                  address\\n                  networkId\\n                  name\\n                  symbol\\n                  imageThumbUrl\\n                  price\\n                  priceChange\\n                  topPairId\\n                  volume\\n                }\\n              }\\n            }"}',
  },
  code: 'ERR_BAD_REQUEST',
  status: 400,
};
